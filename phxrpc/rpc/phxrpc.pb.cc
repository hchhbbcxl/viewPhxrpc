// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phxrpc/rpc/phxrpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "phxrpc/rpc/phxrpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace phxrpc {

namespace {


}  // namespace


void protobuf_AssignDesc_phxrpc_2frpc_2fphxrpc_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_phxrpc_2frpc_2fphxrpc_2eproto() {
  protobuf_AddDesc_phxrpc_2frpc_2fphxrpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "phxrpc/rpc/phxrpc.proto");
  GOOGLE_CHECK(file != NULL);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_phxrpc_2frpc_2fphxrpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_phxrpc_2frpc_2fphxrpc_2eproto() {
}

void protobuf_AddDesc_phxrpc_2frpc_2fphxrpc_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_phxrpc_2frpc_2fphxrpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027phxrpc/rpc/phxrpc.proto\022\006phxrpc\032 googl"
    "e/protobuf/descriptor.proto:/\n\005CmdID\022\036.g"
    "oogle.protobuf.MethodOptions\030\200\211z \001(\005:3\n\t"
    "OptString\022\036.google.protobuf.MethodOption"
    "s\030\201\211z \001(\t:/\n\005Usage\022\036.google.protobuf.Met"
    "hodOptions\030\202\211z \001(\tb\006proto3", 226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "phxrpc/rpc/phxrpc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::MethodOptions::default_instance(),
    2000000, 5, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::MethodOptions::default_instance(),
    2000001, 9, false, false);
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::MethodOptions::default_instance(),
    2000002, 9, false, false);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_phxrpc_2frpc_2fphxrpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_phxrpc_2frpc_2fphxrpc_2eproto {
  StaticDescriptorInitializer_phxrpc_2frpc_2fphxrpc_2eproto() {
    protobuf_AddDesc_phxrpc_2frpc_2fphxrpc_2eproto();
  }
} static_descriptor_initializer_phxrpc_2frpc_2fphxrpc_2eproto_;
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  CmdID(kCmdIDFieldNumber, 0);
const ::std::string OptString_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  OptString(kOptStringFieldNumber, OptString_default);
const ::std::string Usage_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  Usage(kUsageFieldNumber, Usage_default);

// @@protoc_insertion_point(namespace_scope)

}  // namespace phxrpc

// @@protoc_insertion_point(global_scope)
